{"version":3,"sources":["components/contactsList/ContactList.module.css","components/filter/Filter.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","components/contactForm/ContactForm.jsx","components/contactsList/Contact.jsx","redux/phonebook/contacts.actions.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","components/contactsList/ContactList.jsx","components/filter/Filter.jsx","components/App.jsx","redux/phonebook/contacts.reducers.js","redux/phonebook/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shordid","generate","numberInputId","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","htmlFor","label","input","type","id","onChange","btn","Component","Contact","contact","onRemoveContact","item","data-id","onClick","addContactRequest","createAction","addContactSuccess","addContactFailure","removeContactRequest","removeContactSuccess","removeContactFailure","fetchContactsRequest","fetchContactsSuccess","fetchContactsFailure","filterContact","axios","defaults","baseURL","removeContact","dispatch","a","delete","getContacts","contacts","getLoader","loader","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","includes","connect","list","map","event","App","createContact","some","alert","length","addContact","fetchContacts","console","log","container","color","height","width","mapDispatchToProps","post","response","data","get","createReducer","_","action","payload","rootReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f71110a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__GcKYx\",\"item\":\"ContactList_item__2EgDX\",\"btn\":\"ContactList_btn__1_Zi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};","import React, { Component } from 'react';\nimport shordid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shordid.generate();\n  numberInputId = shordid.generate();\n\n  handleInput = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={this.nameInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label htmlFor={this.numberInputId} className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            id={this.numberInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst Contact = ({ contact, onRemoveContact }) => {\n  return (\n    <p className={styles.item}>\n      {contact.name}:<span>{contact.number}</span>\n      <button\n        className={styles.btn}\n        data-id={contact.id}\n        type=\"button\"\n        onClick={onRemoveContact}\n      >\n        X\n      </button>\n    </p>\n  );\n};\n\n// Contact.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//   }).isRequired,\n//   onRemoveContact: PropTypes.func.isRequired,\n// };\n\nexport default Contact;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactFailure = createAction(\"contacts/addContactFailure\");\n\nconst removeContactRequest = createAction(\"contacts/removeContactRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeContactSuccess\");\nconst removeContactFailure = createAction(\"contacts/removeContactFailure\");\n\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nconst fetchContactsFailure = createAction(\"contacts/fetchContactsFailure\");\n\nconst filterContact = createAction(\"FILTER_CONTACT\");\n\nexport {\n  filterContact,\n  addContactRequest,\n  addContactSuccess,\n  addContactFailure,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactFailure,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsFailure,\n};\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactFailure,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactFailure,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsFailure,\n} from \"./contacts.actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n  try {\n    const response = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchContactsFailure(error));\n  }\n};\n\nconst addContact = ({ name, number }) => async (dispatch) => {\n  const contact = { name, number };\n  dispatch(addContactRequest());\n  try {\n    const response = await axios.post(\"/contacts\", contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactFailure(error));\n  }\n};\n\nconst removeContact = (id) => async (dispatch) => {\n  dispatch(removeContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(removeContactSuccess(id));\n  } catch (error) {\n    dispatch(removeContactFailure(error));\n  }\n};\n\nexport { addContact, removeContact, fetchContacts };\n","const getContacts = (state) => state.contacts;\n\nconst getLoader = (state) => state.loader;\n\nconst getFilter = (state) => state.filter;\n\nconst getFilteredContacts = (state) => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport { getContacts, getLoader, getFilter, getFilteredContacts };\n","import React from \"react\";\nimport Contact from \"./Contact\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport { removeContact } from \"../../redux/phonebook/contacts-operations\";\nimport { getFilteredContacts } from \"../../redux/phonebook/contacts-selectors\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map((contact) => (\n        <li className={styles.item} key={contact.id}>\n          <Contact\n            contact={contact}\n            onRemoveContact={() => removeContact(contact.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onRemoveContact: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n});\n\nexport default connect(mapStateToProps, { removeContact })(ContactList);\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/phonebook/contacts.actions\";\nimport { getFilter } from \"../../redux/phonebook/contacts-selectors\";\n\nconst Filter = ({ value, filterContact }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(event) => filterContact(event.target.value)}\n      />\n    </label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChangeFilter: PropTypes.func.isRequired,\n// };\nconst mapStateToProps = (state) => ({\n  value: getFilter(state),\n});\n\nexport default connect(mapStateToProps, { filterContact })(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactsList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport Loader from \"react-loader-spinner\";\nimport styles from \"./App.module.css\";\nimport { connect } from \"react-redux\";\nimport {\n  addContact,\n  fetchContacts,\n  removeContact,\n} from \"../redux/phonebook/contacts-operations\";\nimport { getContacts, getLoader } from \"../redux/phonebook/contacts-selectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  createContact = ({ name, number }) => {\n    const sameName = this.props.contacts.some(\n      (contact) => contact.name === name || contact.number === number\n    );\n    if (sameName) {\n      alert(`This contact is already exists`);\n    } else if (name.length === 0 || number.length === 0) {\n      alert(`Fill in all the fields`);\n    } else {\n      this.props.addContact({ name, number });\n    }\n  };\n\n  render() {\n    console.log(this.props.contacts);\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.createContact} />\n        <h2>Contacts</h2>\n        {this.props.contacts.length >= 2 && <Filter />}\n        <ContactList\n          contacts={this.props.contacts}\n          removeContact={this.props.removeContact}\n        />\n        {this.props.loader && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n  loader: getLoader(state),\n});\nconst mapDispatchToProps = { addContact, removeContact, fetchContacts };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  filterContact,\n  addContactRequest,\n  addContactSuccess,\n  addContactFailure,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactFailure,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsFailure,\n} from \"./contacts.actions\";\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [removeContactSuccess]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, action) => action.payload,\n});\n\nconst loader = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsFailure]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactFailure]: () => false,\n\n  [removeContactRequest]: () => true,\n  [removeContactSuccess]: () => false,\n  [removeContactFailure]: () => false,\n});\n\nexport { contacts, filter, loader };\n","import { combineReducers } from \"redux\";\nimport { contacts, filter, loader } from \"./contacts.reducers\";\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n  loader,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport rootReducer from \"./phonebook/rootReducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}